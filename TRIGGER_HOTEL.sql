
/*Trigger, que impida realizar reservaciÃ³n a los anteriores clientes si tienen observaciones negativas como el vandalismo.*/
CREATE FUNCTION VANDALISMO() RETURNS TRIGGER
AS 
$$ 
BEGIN
if((
	SELECT 
	SUM (FACTURA_VANDALISMO.VANDALISMO_CANTIDAD)
	FROM CLIENTE
	INNER JOIN FACTURA ON FACTURA.CLIENTE_ID=CLIENTE.CLIENTE_ID
	INNER JOIN FACTURA_VANDALISMO ON FACTURA_VANDALISMO.FACTURA_ID=FACTURA.FACTURA_ID
	WHERE CLIENTE.CLIENTE_ID=NEW.CLIENTE_ID
)>=2) then
	DELETE FROM FACTURA WHERE FACTURA.FACTURA_ID=NEW.FACTURA_ID;
	RAISE NOTICE 'ESTE USUARIO REGISTRA DEMASIADOS ACTOS VANDALICOS, NO SE REALIZO LA RESERVA';
	END IF;
	RETURN NULL;
END;
$$
LANGUAGE 'plpgsql'

/*ASIGNAMOS EL PROCESO AL TRIGGER*/
CREATE TRIGGER INSERTAR_FACTURA AFTER INSERT ON FACTURA
FOR EACH ROW
EXECUTE PROCEDURE VANDALISMO()

/*VERIFICAMOS QUE EL TIGGER FUNCIONE*/
INSERT INTO FACTURA VALUES (111121, 1, 1, 210000, 000, '2021/05/13', '2020/05/15', 90, 0.12, 100.80);